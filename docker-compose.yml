networks:
    soketi-network:
        name: soketi-app-manager-network
        driver: bridge

services:
    soketi-app-manager:
        build:
            context: ./
            dockerfile: Dockerfile
        image: soketi-app-manager
        container_name: soketi-app-manager
        volumes:
            - '.:/var/www/html'
        networks:
            - soketi-network

    nginx:
        image: 'nginx:stable-alpine3.17-slim'
        container_name: soketi-app-manager-nginx
        depends_on:
            - soketi-app-manager
            - soketi
        volumes:
          - './docker/nginx.conf:/etc/nginx/conf.d/default.conf'
          - '.:/var/www/html'
        ports:
          - '${APP_PORT:-80}:80'
        networks:
            - soketi-network

    mysql:
        image: 'mysql/mysql-server:8.0'
        container_name: soketi-app-manager-mysql
        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: 'soketi_app_manager'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
            MYSQL_USER: 'soketi'
            MYSQL_PASSWORD: 'password'
        volumes:
            - './docker/data/mysql:/var/lib/mysql'
        networks:
            - soketi-network

    redis:
        image: 'redis:alpine3.19'
        container_name: soketi-app-manager-redis
        command: redis-server --save 60 1 --loglevel warning
        volumes:
            - './docker/data/redis:/data'
        networks:
            - soketi-network

    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        container_name: soketi-websocket-server
        depends_on:
            - mysql
            - redis
        command: node /app/bin/server.js start --config=/soketi.docker.json
        volumes:
            - './soketi.docker.json:/soketi.docker.json'
        networks:
            - soketi-network
